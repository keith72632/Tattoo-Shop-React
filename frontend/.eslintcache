[{"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/index.js":"1","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/reportWebVitals.js":"2","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/App.js":"3","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/store.js":"4","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/screens/GalleryScreen.js":"5","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/screens/HomeScreen.js":"6","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/reducers/imageReducers.js":"7","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/constants/imageConstants.js":"8","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/components/Header.js":"9","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/actions/imagesActions.js":"10","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/components/ImageCard.js":"11","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/screens/LoginScreen.js":"12","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/components/FormContainer.js":"13","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/reducers/userReducers.js":"14","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/constants/userConstants.js":"15","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/actions/userActions.js":"16","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/screens/RegisterScreen.js":"17"},{"size":592,"mtime":1609094567429,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608912971728,"results":"20","hashOfConfig":"19"},{"size":597,"mtime":1609958932134,"results":"21","hashOfConfig":"19"},{"size":794,"mtime":1609959623220,"results":"22","hashOfConfig":"19"},{"size":959,"mtime":1609100098765,"results":"23","hashOfConfig":"19"},{"size":364,"mtime":1609099380607,"results":"24","hashOfConfig":"19"},{"size":543,"mtime":1609096917663,"results":"25","hashOfConfig":"19"},{"size":164,"mtime":1608918278128,"results":"26","hashOfConfig":"19"},{"size":1766,"mtime":1609957385379,"results":"27","hashOfConfig":"19"},{"size":631,"mtime":1609096972269,"results":"28","hashOfConfig":"19"},{"size":270,"mtime":1609100076074,"results":"29","hashOfConfig":"19"},{"size":1488,"mtime":1609958273242,"results":"30","hashOfConfig":"19"},{"size":353,"mtime":1609514468596,"results":"31","hashOfConfig":"19"},{"size":1139,"mtime":1609959555754,"results":"32","hashOfConfig":"19"},{"size":386,"mtime":1609959479074,"results":"33","hashOfConfig":"19"},{"size":1664,"mtime":1609964050117,"results":"34","hashOfConfig":"19"},{"size":2657,"mtime":1609963810248,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1rlmsdg",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/index.js",[],["75","76"],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/reportWebVitals.js",[],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/App.js",[],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/store.js",[],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/screens/GalleryScreen.js",["77"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport { listAllImagesAction } from '../actions/imagesActions'\nimport ImageCard from '../components/ImageCard'\nimport Header from '../components/Header'\n\nconst GalleryScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const listImages = useSelector(state => state.listImages)\n    const { loading, error, images } = listImages\n    console.log(images)\n    useEffect(() => {\n        dispatch(listAllImagesAction())\n    }, [dispatch])\n    return (\n        <>\n            <Header/>\n            <Row>\n            {loading ? <h2>Loading...</h2> : images.map(image => (\n                    <Col key={image._id}sm={12} md={6} lg={4} xl={3}>\n                        <ImageCard image={image.image} />\n                    </Col>\n               ))}\n            </Row>\n        </>\n    )\n}\n\nexport default GalleryScreen\n       ","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/screens/HomeScreen.js",[],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/reducers/imageReducers.js",[],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/constants/imageConstants.js",[],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/components/Header.js",["78","79"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Navbar, Nav, NavDropdown, Container } from 'react-bootstrap'\nimport { USER_LOGIN_RESET } from '../constants/userConstants'\n\nconst Header = ({history}) => {\n\n  const dispatch = useDispatch()\n\n  const userInfo = useSelector(state => state.userInfo)\n  const { loading: userLoading, success: userSuccess, user } = userInfo\n\n  const logOutHandler = () => {\n    dispatch({\n      type: USER_LOGIN_RESET\n    })\n  }\n\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n  <Navbar.Brand href=\"/\">Tattoo Shop</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"/gallery\">Gallery</Nav.Link>\n      <Nav.Link href=\"#artist\">Artists</Nav.Link>\n      <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n      </NavDropdown>\n    </Nav>\n    <Nav>\n      <Nav.Link href=\"#deets\">More deets</Nav.Link>\n      <NavDropdown title={!userSuccess ? <Nav.Link eventKey={2} href='/login'>Login</Nav.Link> : <h6>Hello, {user.firstName}</h6>} id=\"user-info-dropdown\">\n        {!userSuccess ? <NavDropdown.Item href='/login'>Log In</NavDropdown.Item> : <NavDropdown.Item onClick={logOutHandler}>Logout</NavDropdown.Item>}\n      </NavDropdown>\n    </Nav>\n  </Navbar.Collapse>\n</Navbar>\n    )\n}\n\nexport default Header\n","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/actions/imagesActions.js",[],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/components/ImageCard.js",[],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/screens/LoginScreen.js",["80"],"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\nconst LoginScreen = ({history}) => {\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n        history.push('/')\n    }\n    return (\n        <FormContainer>\n            <h1>Login</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type='email' placeholder='enter email' value={email} onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='enter password' value={password} onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n                <Button type='submit'>Login</Button>                    \n            </Form>\n            <Link to='/register'>\n                Not a Member? Click here\n            </Link>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/components/FormContainer.js",[],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/reducers/userReducers.js",[],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/constants/userConstants.js",[],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/actions/userActions.js",["81"],"/home/keith/Documents/JavascriptProjects/TattooShop/frontend/src/screens/RegisterScreen.js",["82"],"import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\nconst RegisterScreen = ({history}) => {\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ firstName, setFirstName ] = useState('')\n    const [ lastName, setLastName ] = useState('')\n    const [ passwordConfirmed, setPasswordConfirmed ] = useState('')\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password && password === passwordConfirmed) {\n            dispatch(register(firstName, lastName, email, password))\n            history.push('/')\n        }\n       \n    }\n    return (\n        <FormContainer>\n            <h1>Login</h1>\n            <Form onSubmit={submitHandler}>\n            <Form.Group controlId='firstName'>\n                    <Form.Label>Enter First Name</Form.Label>\n                    <Form.Control type='text' placeholder='enter first name' value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='lastName'>\n                    <Form.Label>Enter Last Name</Form.Label>\n                    <Form.Control type='text' placeholder='enter last name' value={lastName} onChange={(e) => setLastName(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type='email' placeholder='enter email' value={email} onChange={(e) => setEmail(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='enter password' value={password} onChange={(e) => setPassword(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId='passwordConfirmed'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type='password' placeholder='confirm password' value={passwordConfirmed} onChange={(e) => setPasswordConfirmed(e.target.value)} />\n                </Form.Group>\n                <Button type='submit'>Login</Button>                    \n            </Form>\n            <Link to='/login'>\n                Not a Member? Click here\n            </Link>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":13,"column":22,"nodeType":"89","messageId":"90","endLine":13,"endColumn":27},{"ruleId":"87","severity":1,"message":"91","line":3,"column":36,"nodeType":"89","messageId":"90","endLine":3,"endColumn":45},{"ruleId":"87","severity":1,"message":"92","line":11,"column":20,"nodeType":"89","messageId":"90","endLine":11,"endColumn":31},{"ruleId":"87","severity":1,"message":"93","line":2,"column":23,"nodeType":"89","messageId":"90","endLine":2,"endColumn":34},{"ruleId":"87","severity":1,"message":"94","line":6,"column":5,"nodeType":"89","messageId":"90","endLine":6,"endColumn":21},{"ruleId":"87","severity":1,"message":"93","line":2,"column":23,"nodeType":"89","messageId":"90","endLine":2,"endColumn":34},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Container' is defined but never used.","'userLoading' is assigned a value but never used.","'useSelector' is defined but never used.","'USER_LOGIN_RESET' is defined but never used.","no-global-assign","no-unsafe-negation"]